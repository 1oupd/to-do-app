{"version":3,"sources":["components/Form.js","components/ToDo.js","components/List.js","App.js","index.js"],"names":["Form","props","useState","input","setInput","className","onSubmit","e","preventDefault","id","Math","floor","random","text","type","placeholder","value","name","onChange","target","ToDo","todos","completeTodo","removeTodo","map","todo","index","isComplete","onClick","List","setTodos","test","newTodos","updatedTodos","removeArr","filter","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMAoCeA,MAlCf,SAAcC,GACZ,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OACE,uBAAMC,UAAU,aAAaC,SAXV,SAACC,GACpBA,EAAEC,iBAEFP,EAAMK,SAAS,CACbG,GAAIC,KAAKC,MAAsB,OAAhBD,KAAKE,UACpBC,KAAMV,IAGRC,EAAS,KAGT,UACE,uBACEU,KAAK,OACLC,YAAY,mBACZC,MAAOb,EACPc,KAAK,OACLZ,UAAU,cACVa,SAtBe,SAACX,GACpBH,EAASG,EAAEY,OAAOH,UAuBhB,wBAAQX,UAAU,eAAlB,0B,OCOSe,MAhCf,YAAoD,IAApCC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,aAAcC,EAAc,EAAdA,WAMjC,OAAOF,EAAMG,KAAI,SAACC,EAAMC,GAAP,OACb,sBACIrB,UAAWoB,EAAKE,WAAa,oBAAsB,WADvD,UAII,qBAAmBC,QAAS,kBAAMN,EAAaG,EAAKhB,KAApD,SACKgB,EAAKZ,MADAY,EAAKhB,IAIf,qBAAKJ,UAAU,QAAf,SACI,cAAC,IAAD,CACIuB,QAAS,kBAAML,EAAWE,EAAKhB,KAC/BJ,UAAU,oBATbqB,OC4BFG,MArCf,WACE,MAA0B3B,mBAAS,IAAnC,mBAAOmB,EAAP,KAAcS,EAAd,KA2BA,OACE,sBAAKzB,UAAU,cAAf,UACE,4DACA,cAAC,EAAD,CAAMC,SA5BM,SAAAmB,GACd,GAAKA,EAAKZ,OAAQ,QAAQkB,KAAKN,EAAKZ,MAApC,CAIA,IAAMmB,EAAQ,CAAIP,GAAJ,mBAAaJ,IAE3BS,EAASE,OAsBP,cAAC,EAAD,CAAMX,MAAOA,EAAOC,aAdH,SAAAb,GACnB,IAAIwB,EAAeZ,EAAMG,KAAI,SAAAC,GAI3B,OAHIA,EAAKhB,KAAOA,IACdgB,EAAKE,YAAcF,EAAKE,YAEnBF,KAETK,EAASG,IAOyCV,WAnBjC,SAAAd,GACjB,IAAMyB,EAAY,YAAIb,GAAOc,QAAO,SAAAV,GAAI,OAAIA,EAAKhB,KAAOA,KACxDqB,EAASI,UCNEE,MARf,WACE,OACE,qBAAK/B,UAAU,WAAf,SACE,cAAC,EAAD,OCJNgC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.10bff6dd.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction Form(props) {\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    props.onSubmit({\r\n      id: Math.floor(Math.random() * 999999),\r\n      text: input,\r\n    });\r\n\r\n    setInput(\"\");\r\n  };\r\n  return (\r\n    <form className=\"to-do-form\" onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"drink some water\"\r\n        value={input}\r\n        name=\"text\"\r\n        className=\"to-do-input\"\r\n        onChange={handleChange}\r\n      />\r\n      <button className=\"to-do-button\">\r\n        add item\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import React, { useState } from 'react'\r\nimport { RiDeleteBack2Line } from 'react-icons/ri'\r\n// import { FiEdit2 } from 'react-icons/fi'\r\n\r\nfunction ToDo({ todos, completeTodo, removeTodo }) {\r\n    // const [edit, setEdit] = useState({\r\n    //     id: null,\r\n    //     value: ''\r\n    // })                                                   // for edit icon (later date)\r\n\r\n    return todos.map((todo, index) => (\r\n        <div\r\n            className={todo.isComplete ? 'todo-row complete' : 'todo-row'}\r\n            key={index}\r\n        >\r\n            <div key={todo.id} onClick={() => completeTodo(todo.id)}>\r\n                {todo.text}\r\n            </div>\r\n\r\n            <div className=\"icons\">\r\n                <RiDeleteBack2Line\r\n                    onClick={() => removeTodo(todo.id)}\r\n                    className='delete-icon'\r\n                />\r\n                {/* <FiEdit2\r\n                    onClick={() => setEdit({ id: todo.id, value: todo.text})}\r\n                    className='edit-icon'\r\n                /> */}\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n    ))\r\n}\r\n\r\nexport default ToDo","import React, { useState } from \"react\";\r\nimport Form from \"./Form\";\r\nimport ToDo from \"./ToDo\";\r\n\r\nfunction List() {\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  const addTodo = todo => {\r\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\r\n      return;\r\n    }\r\n\r\n    const newTodos = [todo, ...todos];\r\n\r\n    setTodos(newTodos);\r\n  };\r\n\r\n  const removeTodo = id => {\r\n    const removeArr = [...todos].filter(todo => todo.id !== id);\r\n    setTodos(removeArr);\r\n  };\r\n\r\n  const completeTodo = id => {\r\n    let updatedTodos = todos.map(todo => {\r\n      if (todo.id === id) {\r\n        todo.isComplete = !todo.isComplete\r\n      }\r\n      return todo;\r\n    });\r\n    setTodos(updatedTodos)\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-submit\">\r\n      <h1>what would you like to do?</h1>\r\n      <Form onSubmit={addTodo} />\r\n      <ToDo todos={todos} completeTodo={completeTodo} removeTodo={removeTodo} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default List;\r\n","\nimport './App.css';\nimport List from './components/List';\nimport ToDo from './components/ToDo.js'\n\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n      <List />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}